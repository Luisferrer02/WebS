@baseUrl = http://localhost:3001

POST {{baseUrl}}/api/auth/register HTTP/1.1
Content-Type: application/json

{
  "name": "Pedro",
  "age": 20,
  "email": "pedro@test.com",
  "password": "HolaMundo01"
}

###
POST {{baseUrl}}/api/auth/login HTTP/1.1
Content-Type: application/json

{
  "email": "pedro@test.com",
  "password": "HolaMundo01"
}

###

@tokenLogin = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2N2QwMTZlNDMwOWM3ODQ1NDQ1MjU0M2EiLCJpYXQiOjE3NDI1NzU5MDQsImV4cCI6MTc0MjY2MjMwNH0.7mBH63XPssLzHwBwGaPmB22eIABQMVfuvUEyAwyAb2U
@userIdLogin = 67d016e4309c78454452543a
######################################################################
POST {{baseUrl}}/api/tracks HTTP/1.1
Content-Type: application/json
Authorization: Bearer {{tokenLogin}}

{
    "dato": "basura",
    "name": "nombre",
    "album": "album",
    "cover": "http://tttt.com",
    "artist": {
        "name": "luis",
        "nickname": "rsurname",
        "nationality": "ES"
    },
    "duration": {
        "start": 1,
        "end": 2
    },
    "mediaId": "507f191e810c19729de860ea"
}

###
POST {{baseUrl}}/api/tracks HTTP/1.1
Content-Type: application/json
Authorization: Bearer {{tokenLogin}}

{
    "name": "Track Válido",
    "album": "Álbum Válido",
    "cover": "http://ejemplo.com/cover-valid.jpg",
    "artist": {
        "name": "Artista Válido",
        "nickname": "ValidNick",
        "nationality": "ES"
    },
    "duration": {
        "start": 0,
        "end": 300
    },
    "mediaId": "507f191e810c19729de860ea"
}

###

@idProject = 67dd9caa9e23a5014b16fb3d

###
GET {{baseUrl}}/api/tracks HTTP/1.1
Authorization: Bearer {{tokenLogin}}

###
GET {{baseUrl}}/api/tracks/{{idProject}} HTTP/1.1
Authorization: Bearer {{tokenLogin}}
### posible error no capturado con un id proyecto falso

GET {{baseUrl}}/api/tracks/67add625fc9687edcaea7c96 HTTP/1.1
Authorization: Bearer {{tokenLogin}}

###

GET {{baseUrl}}/api/users HTTP/1.1
Authorization: {{tokenLogin}}

###
@idUser = 67c982fd621bb42b014b187a
###

GET {{baseUrl}}/api/users/{{idUser}} HTTP/1.1
Authorization: Bearer {{tokenLogin}}

###

PATCH {{baseUrl}}/api/users/{{idUser}} HTTP/1.1
Content-Type: application/json
Authorization: Bearer {{tokenLogin}}

{  
    "role": "admin"
}

###

DELETE {{baseUrl}}/api/users/{{idUser}} HTTP/1.1
Authorization: Bearer: {{tokenLogin}}

###

###Storage, luego añadir authmiddleware 
### 1. Obtener todos los ítems
GET http://localhost:3001/api/storage
Content-Type: application/json

###
@itemId=556655
### 2. Obtener un ítem por ID
GET http://localhost:3001/api/storage/{{itemId}}
Content-Type: application/json

###

### 3. Crear un nuevo ítem (Subir imagen a Pinata)
POST http://localhost:3001/api/storage
Content-Type: multipart/form-data; boundary=Boundary

--Boundary
Content-Disposition: form-data; name="image"; filename="image.jpg"
Content-Type: image/jpeg

< ./image.jpg
--Boundary--

###

### 4. Actualizar la imagen de un ítem
PUT http://localhost:3001/api/storage/{{itemId}}
Content-Type: multipart/form-data; boundary=Boundary

--Boundary
Content-Disposition: form-data; name="image"; filename="newimg.jpg"
Content-Type: image/jpeg

< ./newimg.jpg
--Boundary--

###

### 5. Eliminar un ítem
DELETE http://localhost:3001/api/storage/{{itemId}}
Content-Type: application/json
