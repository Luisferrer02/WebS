@baseUrl = http://localhost:3001

### 1. Registro de usuario
POST {{baseUrl}}/api/auth/register HTTP/1.1
Content-Type: application/json

{
  "name": "Alicia",
  "age": 25,
  "email": "alicia@example.com",
  "password": "Password123"
}

###
@tokenFromRegister = eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJfaWQiOiI2N2UwNGVkZDMyOWFjMjNlYWIyY2E2MzkiLCJpYXQiOjE3NDI3NTM1MDEsImV4cCI6MTc0MjgzOTkwMX0.Z8NoQmJmWrqZaq3scmTcIKy5mRIsTBFyfq6bgdXzVJg

### 2. Validación de email (Código de verificación)
POST {{baseUrl}}/api/users/validate-email HTTP/1.1
Content-Type: application/json
Authorization: Bearer {{tokenFromRegister}}

{
  "code": "210693"
}

### 3. Login de usuario
POST {{baseUrl}}/api/auth/login HTTP/1.1
Content-Type: application/json

{
  "email": "alicia@example.com",
  "password": "Password123"
}

###
@tokenFromLogin = <TOKEN_OBTENIDO_DEL_LOGIN>
@userId = 67e04edd329ac23eab2ca639

### 4. On boarding – Datos personales
PATCH {{baseUrl}}/api/users/onboarding/personal HTTP/1.1
Content-Type: application/json
Authorization: Bearer {{tokenFromLogin}}

{
  "name": "Alice Updated",
  "lastName": "Smith",
  "nif": "12345678A"
}

### 5. On boarding – Datos de la compañía
PATCH {{baseUrl}}/api/users/onboarding/company HTTP/1.1
Content-Type: application/json
Authorization: Bearer {{tokenFromLogin}}

{
  "companyName": "Acme Corp",
  "cif": "A12345678",
  "address": "123 Main Street"
}

### 6. Actualizar logo
PATCH {{baseUrl}}/api/users/logo HTTP/1.1
Content-Type: multipart/form-data; boundary=Boundary
Authorization: Bearer {{tokenFromLogin}}

--Boundary
Content-Disposition: form-data; name="image"; filename="image.jpg"
Content-Type: image/jpg

< ./image.jpg
--Boundary--

### 7. Obtener usuario a partir del token
GET {{baseUrl}}/api/users/me HTTP/1.1
Authorization: Bearer {{tokenFromLogin}}

### 8. Eliminar usuario (soft delete)
DELETE {{baseUrl}}/api/users/me?soft=true HTTP/1.1
Authorization: Bearer {{tokenFromLogin}}

### 9. Recuperar contraseña (stub) sin cambio de contraseña
POST {{baseUrl}}/api/users/recover-password HTTP/1.1
Content-Type: application/json

{
  "email": "alicia@example.com"
}

### 10. Cambio de contraseña (simulado) con nuevo password
POST {{baseUrl}}/api/users/recover-password HTTP/1.1
Content-Type: application/json

{
  "email": "alicia@example.com",
  "newPassword": "NewPass456"
}

### 11. Invitar a un usuario
POST {{baseUrl}}/api/users/invite HTTP/1.1
Content-Type: application/json
Authorization: Bearer {{tokenFromLogin}}

{
  "email": "bob@example.com"
}

### 12. Enviar Email (prueba de mails)
POST {{baseUrl}}/api/mail HTTP/1.1
Content-Type: application/json
Authorization: Bearer {{tokenFromLogin}}

{
  "subject": "Test Email",
  "text": "Este es un email enviado desde Nodemailer con OAuth2.",
  "to": "destinatario@example.com",
  "from": "tu_correo@gmail.com"
}
